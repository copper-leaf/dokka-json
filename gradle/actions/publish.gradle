// Javadoc and Orchid
//----------------------------------------------------------------------------------------------------------------------

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from project.sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

// Deployment
//----------------------------------------------------------------------------------------------------------------------

def pomConfig = {
    scm {
        url "https://github.com/${rootProject.ext.github_project}.git"
        connection "https://github.com/${rootProject.ext.github_project}.git"
        developerConnection "https://github.com/${rootProject.ext.github_project}.git"
    }
    licenses {
        license {
            name rootProject.ext.license.name
            url rootProject.ext.license.url
            distribution "repo"
        }
    }
    developers {
        developer {
            id rootProject.ext.developer_id
            name rootProject.ext.developer_name
            email rootProject.ext.developer_email
        }
    }
}

publishing {
    publications {
        ProjectPublication(MavenPublication) {
            from project.components.java
            artifact project.sourcesJar
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode("description", rootProject.ext.project_description)
                root.appendNode("name", rootProject.ext.project_name)
                root.appendNode("url", rootProject.ext.base_url)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = rootProject.ext.bintray_username
    key = rootProject.ext.bintray_api_key
    publications = ["ProjectPublication"]

    dryRun = rootProject.ext.dry_deploy
    publish = !rootProject.ext.dry_deploy
    override = true

    pkg {
        repo = rootProject.ext.bintray_repo
        name = project.name
        userOrg = rootProject.ext.bintray_user_org
        licenses = [rootProject.ext.license.name]
        vcsUrl = "https://github.com/${rootProject.ext.github_project}.git"

        version {
            name = "${project.version}"
            desc = "${project.name} ${project.version}"
            released = new Date()

            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = rootProject.ext.maven_central_sync
                user = rootProject.ext.maven_central_username
                password = rootProject.ext.maven_central_password
            }
        }
    }
}
project.tasks.publish.dependsOn bintrayUpload
