buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath(Libs.kotlin_gradle_plugin)
        classpath(Libs.kotlin_serialization)
        classpath(Libs.shadow)
        classpath(Libs.gradle_bintray_plugin)
        classpath(Libs.buildsrcversions)
        classpath("de.undercouch:gradle-download-task:4.0.2")
    }
}

apply plugin: "de.fayard.buildSrcVersions"
apply plugin: 'de.undercouch.download'

group 'com.eden.kodiak'
version '0.4.6'

// Config Values
//----------------------------------------------------------------------------------------------------------------------

ext.ossLicenses = [
        'BSD' : [
                name: 'BSD 3-Clause',
                url : 'https://opensource.org/licenses/BSD-3-Clause'
        ]
]

ext {
    github_project = 'copper-leaf/kodiak'

    // Orchid
    orchid_version = '0.17.1'
    orchid_theme = 'Copper'
    base_url = 'https://copper-leaf.github.io/kodiak'
    github_token = project.hasProperty("github_token") ? project.property("github_token") : System.getenv('GITHUB_TOKEN')
    environment = "${project.hasProperty("env") ? project.property("env") : 'debug'}"

    // Bintray uploads
    dry_deploy = project.hasProperty('dryDeploy')
    bintray_username = "${project.properties['bintray_username']}"
    bintray_api_key = "${project.properties['bintray_apiKey']}"
    bintray_repo = 'Eden'
    bintray_user_org = 'javaeden'

    maven_central_sync = project.hasProperty('includeMavenCentralSync')
    maven_central_username = "${project.properties['mavenCentral_username']}"
    maven_central_password = "${project.properties['mavenCentral_password']}"

    // Developer info
    developer_id = 'JavaEden'
    developer_name = 'Casey Brooks'
    developer_email = 'cjbrooks12@gmail.com'

    // Project info
    project_name = 'Kodiak'
    project_description = 'Wrappers around code documentation CLI tools to produce JSON models, usable as libraries'

    license = rootProject.ext.ossLicenses['BSD']
}

wrapper {
    gradleVersion = Versions.gradleLatestVersion
    distributionType = Wrapper.DistributionType.ALL
}
